{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agust\\\\stateless\\\\client\\\\src\\\\pages\\\\Landing.js\",\n  _s = $RefreshSig$();\nimport '../assets/styles/Styles.css';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { useState } from 'react';\nimport { db, storage } from '../firebase'; // Import your Firebase config\nimport { v4 as uuidv4 } from 'uuid'; // Import UUID library for generating unique IDs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Landing({\n  user\n}) {\n  _s();\n  const [postDetails, setPostDetails] = useState({\n    title: \"\",\n    author: \"\",\n    description: \"\"\n  });\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setImageFile(file);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (imageFile) {\n        // Generate a unique post ID (you can also use your own logic)\n        const postId = uuidv4();\n\n        // Upload image to Firebase Storage\n        const storageRef = storage.ref(`images/${postId}_${imageFile.name}`);\n        await storageRef.put(imageFile);\n        const imageUrl = await storageRef.getDownloadURL();\n\n        // Save the post data to Firestore\n        await db.collection('post').add({\n          uid: user.uid,\n          // Assuming you have a user object with a uid\n          postId,\n          image: imageUrl,\n          title,\n          description,\n          timestamp: new Date()\n        });\n\n        // Reset form fields after successful upload\n        setTitle('');\n        setDescription('');\n        setImageFile(null);\n      }\n    } catch (error) {\n      console.error('Error uploading data:', error);\n      // Handle and display the error to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"post\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: handleDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Landing, \"gOhCff4FWVjALrin2Xbl+HUowRM=\");\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["Header","Footer","useState","db","storage","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","Landing","user","_s","postDetails","setPostDetails","title","author","description","setTitle","setDescription","imageFile","setImageFile","handleTitleChange","e","target","value","handleDescriptionChange","handleImageChange","file","files","handleSubmit","preventDefault","postId","storageRef","ref","name","put","imageUrl","getDownloadURL","collection","add","uid","image","timestamp","Date","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","type","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/agust/stateless/client/src/pages/Landing.js"],"sourcesContent":["import '../assets/styles/Styles.css';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nimport { useState } from 'react';\nimport { db, storage } from '../firebase'; // Import your Firebase config\nimport { v4 as uuidv4 } from 'uuid'; // Import UUID library for generating unique IDs\n\nfunction Landing({ user }) {\n\n  const [postDetails, setPostDetails] =useState({\n    title:\"\",\n    author:\"\",\n    description:\"\"\n  });\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    setImageFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      if (imageFile) {\n        // Generate a unique post ID (you can also use your own logic)\n        const postId = uuidv4();\n\n        // Upload image to Firebase Storage\n        const storageRef = storage.ref(`images/${postId}_${imageFile.name}`);\n        await storageRef.put(imageFile);\n        const imageUrl = await storageRef.getDownloadURL();\n        \n        // Save the post data to Firestore\n        await db.collection('post').add({\n          uid: user.uid, // Assuming you have a user object with a uid\n          postId,\n          image: imageUrl,\n          title,\n          description,\n          timestamp: new Date(),\n        });\n\n        // Reset form fields after successful upload\n        setTitle('');\n        setDescription('');\n        setImageFile(null);\n      }\n    } catch (error) {\n      console.error('Error uploading data:', error);\n      // Handle and display the error to the user\n    }\n  };\n\n  return (\n    <>\n    \n    <Header/>\n\n    <form id='post' onSubmit={handleSubmit}>\n      <div>\n        <label>Title</label>\n        <input type=\"text\" value={title} onChange={handleTitleChange} />\n      </div>\n      <div>\n        <label>Description</label>\n        <textarea value={description} onChange={handleDescriptionChange} />\n      </div>\n      <div>\n        <label>Image</label>\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n      </div>\n      <button type=\"submit\">Upload</button>\n    </form>\n\n    <Footer/>\n    </>\n  );\n}\n\n\n\n\nexport default Landing;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}