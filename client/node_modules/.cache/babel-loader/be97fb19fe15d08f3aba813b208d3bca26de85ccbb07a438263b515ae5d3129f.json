{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agust\\\\stateless\\\\client\\\\src\\\\pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport '../assets/styles/Styles.css';\nimport statelessLogo75 from '../assets/img/statelessLogo75.png';\nimport { useHistory } from 'react-router-dom';\nimport { validateUsername, validatePassword, passwordsMatch, validateEmptyUsername } from '../validation';\nimport { collection, doc, setDoc, query, where, getDocs } from 'firebase/firestore';\nimport { auth, db, signInWithGooglePopup } from '../firebase';\nimport { createUserWithEmailAndPassword, sendEmailVerification } from 'firebase/auth';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [cPassword, setCPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const history = useHistory();\n  const handleSignUp = async e => {\n    e.preventDefault();\n    const emailValue = email;\n    const passwordValue = password;\n    const usernameValue = username;\n    const cPasswordValue = cPassword;\n\n    // Validation\n\n    if (validateEmptyUsername(usernameValue)) {\n      alert('You must enter an username');\n      return;\n    }\n    if (!validateUsername(usernameValue)) {\n      setUsername('');\n      alert('Username length must have between 6 and 12 characters');\n      return;\n    }\n    if (!validatePassword(passwordValue)) {\n      setPassword('');\n      setCPassword('');\n      alert('Password length must have between 8 and 15 characters');\n      return;\n    }\n    if (!passwordsMatch(passwordValue, cPasswordValue)) {\n      setPassword('');\n      setCPassword('');\n      alert('Passwords must match');\n      return;\n    }\n    const userQuery = query(collection(db, 'user'), where('username', '==', usernameValue));\n    const emailQuery = query(collection(db, 'user'), where('email', '==', emailValue));\n    try {\n      // Verify if the username is already in use \n      const userQuerySnapshot = await getDocs(userQuery);\n      // Verify if the email is already in use \n      const emailQuerySnapshot = await getDocs(emailQuery);\n      if (!userQuerySnapshot.empty) {\n        // If there's another user with that username \n        userQuerySnapshot.forEach(doc => {\n          alert(\"Username already taken\");\n        });\n        return;\n      }\n      if (!emailQuerySnapshot.empty) {\n        emailQuerySnapshot.forEach(doc => {\n          alert(\"Email already in use\");\n        });\n        return;\n      }\n\n      // Create a new user \n      const userCredential = await createUserWithEmailAndPassword(auth, emailValue, passwordValue);\n\n      // Store the data in a new document which belongs to the \"user\" collection in our firestore \n      const user = userCredential.user;\n      await setDoc(doc(collection(db, 'user'), user.uid), {\n        uid: user.uid,\n        username: usernameValue,\n        email: emailValue\n      });\n\n      // Email verification\n\n      await sendEmailVerification(userCredential.user);\n\n      // If successful, redirect to landing page\n      history.push('/');\n    } catch (error) {\n      // Mistake handler \n      alert('Error registering:', error.message);\n    }\n  };\n  const logGoogleUser = async () => {\n    try {\n      const response = await signInWithGooglePopup();\n      alert(response);\n\n      // If successful, redirect to landing page\n      history.push('/');\n    } catch (error) {\n      // Mistake handler \n      alert('Error registering:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"header-signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: statelessLogo75,\n              alt: \"Stateless logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"got-account\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Already got an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/sign-up\",\n            children: \"Sign in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sign-up\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"title-sup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sign Up \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"It's quick and easy!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSignUp,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fusername\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"fusername\",\n              name: \"fusername\",\n              placeholder: \"Enter an username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"Enter your email address\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lpassword\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"lpassword\",\n              name: \"lpassword\",\n              placeholder: \"Enter a password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lcpassword\",\n              children: \"Confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"lcpassword\",\n              name: \"lcpassword\",\n              placeholder: \"Confirm password\",\n              value: cPassword,\n              onChange: e => setCPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"buttons-su\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"button-su\",\n              type: \"submit\",\n              children: \"Create account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"login-with-google-btn\",\n              onClick: logGoogleUser,\n              children: \"Sign in with Google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(SignUp, \"w100KG1PjUYT8phYcVuPgoixnUc=\", false, function () {\n  return [useHistory];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["statelessLogo75","useHistory","validateUsername","validatePassword","passwordsMatch","validateEmptyUsername","collection","doc","setDoc","query","where","getDocs","auth","db","signInWithGooglePopup","createUserWithEmailAndPassword","sendEmailVerification","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","email","setEmail","password","setPassword","cPassword","setCPassword","username","setUsername","history","handleSignUp","e","preventDefault","emailValue","passwordValue","usernameValue","cPasswordValue","alert","userQuery","emailQuery","userQuerySnapshot","emailQuerySnapshot","empty","forEach","userCredential","user","uid","push","error","message","logGoogleUser","response","children","id","href","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","type","name","placeholder","value","onChange","target","class","onClick","_c","$RefreshReg$"],"sources":["C:/Users/agust/stateless/client/src/pages/SignUp.js"],"sourcesContent":["import '../assets/styles/Styles.css';\r\nimport statelessLogo75 from '../assets/img/statelessLogo75.png';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nimport { validateUsername,validatePassword,passwordsMatch, validateEmptyUsername } from '../validation';\r\n\r\nimport { collection, doc, setDoc, query, where,getDocs } from 'firebase/firestore';\r\n\r\nimport { auth,db,  signInWithGooglePopup } from '../firebase';\r\nimport { createUserWithEmailAndPassword, sendEmailVerification } from 'firebase/auth';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction SignUp() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [cPassword, setCPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  \r\n  const handleSignUp = async (e) => {\r\n\r\n    e.preventDefault();\r\n  \r\n    const emailValue = email;\r\n    const passwordValue = password;\r\n    const usernameValue = username; \r\n    const cPasswordValue = cPassword;  \r\n    \r\n\r\n    // Validation\r\n\r\n    if(validateEmptyUsername(usernameValue)){\r\n      alert('You must enter an username');\r\n      return;\r\n    }\r\n\r\n    if (!validateUsername(usernameValue)) {\r\n      setUsername('');\r\n      alert('Username length must have between 6 and 12 characters');\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(passwordValue)) {\r\n      setPassword('');\r\n      setCPassword('');\r\n      alert('Password length must have between 8 and 15 characters');\r\n      return;\r\n    }\r\n\r\n    if (!passwordsMatch(passwordValue, cPasswordValue)) {\r\n      setPassword('');\r\n      setCPassword('');\r\n      alert('Passwords must match');\r\n      return;\r\n    }\r\n    \r\n\r\n    const userQuery = query(collection(db, 'user'), where('username', '==', usernameValue));\r\n    const emailQuery = query(collection(db, 'user'), where('email', '==', emailValue));\r\n\r\n    try {\r\n      // Verify if the username is already in use \r\n      const userQuerySnapshot = await getDocs(userQuery);\r\n      // Verify if the email is already in use \r\n      const emailQuerySnapshot = await getDocs(emailQuery);\r\n\r\n\r\n    if (!userQuerySnapshot.empty) {\r\n      // If there's another user with that username \r\n      userQuerySnapshot.forEach((doc) => {\r\n        alert(\"Username already taken\");\r\n      });\r\n      return;\r\n    }\r\n    if(!emailQuerySnapshot.empty){\r\n      emailQuerySnapshot.forEach((doc)=>{\r\n        alert(\"Email already in use\");\r\n      })\r\n      return;\r\n    }\r\n\r\n      // Create a new user \r\n      const userCredential = await createUserWithEmailAndPassword(auth, emailValue, passwordValue);\r\n  \r\n      // Store the data in a new document which belongs to the \"user\" collection in our firestore \r\n      const user = userCredential.user;\r\n      await setDoc(doc(collection(db, 'user'), user.uid), {\r\n        uid: user.uid,\r\n        username: usernameValue,\r\n        email: emailValue,\r\n      });\r\n\r\n\r\n      // Email verification\r\n\r\n      await sendEmailVerification(userCredential.user);\r\n  \r\n      // If successful, redirect to landing page\r\n      history.push('/');\r\n    } catch (error) {\r\n      // Mistake handler \r\n      alert('Error registering:', error.message);\r\n    }\r\n  };\r\n\r\n\r\n  const logGoogleUser = async () => {\r\n  \r\n    try{\r\n      const response = await signInWithGooglePopup();\r\n      alert(response);\r\n    \r\n\r\n      // If successful, redirect to landing page\r\n      history.push('/');\r\n    }\r\n    catch(error){\r\n      // Mistake handler \r\n      alert('Error registering:', error.message);\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n<div id=\"container\">\r\n\r\n      <header id='header-signup'>\r\n\r\n        <div>\r\n          <a href='/'><img src={statelessLogo75}  alt='Stateless logo'></img></a>\r\n        </div>\r\n\r\n\r\n        <div id=\"got-account\">\r\n            <h4>Already got an account?</h4><a href=\"/sign-up\">Sign in!</a>\r\n        </div>\r\n\r\n      </header>\r\n\r\n\r\n      <div id=\"sign-up\">\r\n\r\n        <div id=\"title-sup\">\r\n          <h1>Sign Up </h1>\r\n          <h4>It's quick and easy!</h4>\r\n        </div>\r\n\r\n        <form onSubmit={handleSignUp}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"fusername\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"fusername\"\r\n              name=\"fusername\"\r\n              placeholder='Enter an username'\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder='Enter your email address'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lpassword\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"lpassword\"\r\n              name=\"lpassword\"\r\n              placeholder='Enter a password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lcpassword\">Confirm password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"lcpassword\"\r\n              name=\"lcpassword\"\r\n              placeholder='Confirm password'\r\n              value={cPassword}\r\n              onChange={(e) => setCPassword(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div id='buttons-su'>\r\n\r\n            <button id='button-su' type=\"submit\">Create account</button>\r\n\r\n\r\n            \r\n\r\n            <button type=\"button\" class=\"login-with-google-btn\"onClick={logGoogleUser} >\r\n              Sign in with Google\r\n            </button>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;"],"mappings":";;AAAA,OAAO,6BAA6B;AACpC,OAAOA,eAAe,MAAM,mCAAmC;AAE/D,SAASC,UAAU,QAAQ,kBAAkB;AAG7C,SAASC,gBAAgB,EAACC,gBAAgB,EAACC,cAAc,EAAEC,qBAAqB,QAAQ,eAAe;AAEvG,SAASC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAACC,OAAO,QAAQ,oBAAoB;AAElF,SAASC,IAAI,EAACC,EAAE,EAAGC,qBAAqB,QAAQ,aAAa;AAC7D,SAASC,8BAA8B,EAAEC,qBAAqB,QAAQ,eAAe;AACrF,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,OAAO,GAAG/B,UAAU,CAAC,CAAC;EAG5B,MAAMgC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAEhCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,UAAU,GAAGZ,KAAK;IACxB,MAAMa,aAAa,GAAGX,QAAQ;IAC9B,MAAMY,aAAa,GAAGR,QAAQ;IAC9B,MAAMS,cAAc,GAAGX,SAAS;;IAGhC;;IAEA,IAAGvB,qBAAqB,CAACiC,aAAa,CAAC,EAAC;MACtCE,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IAEA,IAAI,CAACtC,gBAAgB,CAACoC,aAAa,CAAC,EAAE;MACpCP,WAAW,CAAC,EAAE,CAAC;MACfS,KAAK,CAAC,uDAAuD,CAAC;MAC9D;IACF;IAEA,IAAI,CAACrC,gBAAgB,CAACkC,aAAa,CAAC,EAAE;MACpCV,WAAW,CAAC,EAAE,CAAC;MACfE,YAAY,CAAC,EAAE,CAAC;MAChBW,KAAK,CAAC,uDAAuD,CAAC;MAC9D;IACF;IAEA,IAAI,CAACpC,cAAc,CAACiC,aAAa,EAAEE,cAAc,CAAC,EAAE;MAClDZ,WAAW,CAAC,EAAE,CAAC;MACfE,YAAY,CAAC,EAAE,CAAC;MAChBW,KAAK,CAAC,sBAAsB,CAAC;MAC7B;IACF;IAGA,MAAMC,SAAS,GAAGhC,KAAK,CAACH,UAAU,CAACO,EAAE,EAAE,MAAM,CAAC,EAAEH,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE4B,aAAa,CAAC,CAAC;IACvF,MAAMI,UAAU,GAAGjC,KAAK,CAACH,UAAU,CAACO,EAAE,EAAE,MAAM,CAAC,EAAEH,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE0B,UAAU,CAAC,CAAC;IAElF,IAAI;MACF;MACA,MAAMO,iBAAiB,GAAG,MAAMhC,OAAO,CAAC8B,SAAS,CAAC;MAClD;MACA,MAAMG,kBAAkB,GAAG,MAAMjC,OAAO,CAAC+B,UAAU,CAAC;MAGtD,IAAI,CAACC,iBAAiB,CAACE,KAAK,EAAE;QAC5B;QACAF,iBAAiB,CAACG,OAAO,CAAEvC,GAAG,IAAK;UACjCiC,KAAK,CAAC,wBAAwB,CAAC;QACjC,CAAC,CAAC;QACF;MACF;MACA,IAAG,CAACI,kBAAkB,CAACC,KAAK,EAAC;QAC3BD,kBAAkB,CAACE,OAAO,CAAEvC,GAAG,IAAG;UAChCiC,KAAK,CAAC,sBAAsB,CAAC;QAC/B,CAAC,CAAC;QACF;MACF;;MAEE;MACA,MAAMO,cAAc,GAAG,MAAMhC,8BAA8B,CAACH,IAAI,EAAEwB,UAAU,EAAEC,aAAa,CAAC;;MAE5F;MACA,MAAMW,IAAI,GAAGD,cAAc,CAACC,IAAI;MAChC,MAAMxC,MAAM,CAACD,GAAG,CAACD,UAAU,CAACO,EAAE,EAAE,MAAM,CAAC,EAAEmC,IAAI,CAACC,GAAG,CAAC,EAAE;QAClDA,GAAG,EAAED,IAAI,CAACC,GAAG;QACbnB,QAAQ,EAAEQ,aAAa;QACvBd,KAAK,EAAEY;MACT,CAAC,CAAC;;MAGF;;MAEA,MAAMpB,qBAAqB,CAAC+B,cAAc,CAACC,IAAI,CAAC;;MAEhD;MACAhB,OAAO,CAACkB,IAAI,CAAC,GAAG,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACAX,KAAK,CAAC,oBAAoB,EAAEW,KAAK,CAACC,OAAO,CAAC;IAC5C;EACF,CAAC;EAGD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAEhC,IAAG;MACD,MAAMC,QAAQ,GAAG,MAAMxC,qBAAqB,CAAC,CAAC;MAC9C0B,KAAK,CAACc,QAAQ,CAAC;;MAGf;MACAtB,OAAO,CAACkB,IAAI,CAAC,GAAG,CAAC;IACnB,CAAC,CACD,OAAMC,KAAK,EAAC;MACV;MACAX,KAAK,CAAC,oBAAoB,EAAEW,KAAK,CAACC,OAAO,CAAC;IAC5C;EAEF,CAAC;EAGD,oBACEjC,OAAA,CAAAE,SAAA;IAAAkC,QAAA,eAEJpC,OAAA;MAAKqC,EAAE,EAAC,WAAW;MAAAD,QAAA,gBAEbpC,OAAA;QAAQqC,EAAE,EAAC,eAAe;QAAAD,QAAA,gBAExBpC,OAAA;UAAAoC,QAAA,eACEpC,OAAA;YAAGsC,IAAI,EAAC,GAAG;YAAAF,QAAA,eAACpC,OAAA;cAAKuC,GAAG,EAAE1D,eAAgB;cAAE2D,GAAG,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC,eAGN5C,OAAA;UAAKqC,EAAE,EAAC,aAAa;UAAAD,QAAA,gBACjBpC,OAAA;YAAAoC,QAAA,EAAI;UAAuB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAAA5C,OAAA;YAAGsC,IAAI,EAAC,UAAU;YAAAF,QAAA,EAAC;UAAQ;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC,eAGT5C,OAAA;QAAKqC,EAAE,EAAC,SAAS;QAAAD,QAAA,gBAEfpC,OAAA;UAAKqC,EAAE,EAAC,WAAW;UAAAD,QAAA,gBACjBpC,OAAA;YAAAoC,QAAA,EAAI;UAAQ;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB5C,OAAA;YAAAoC,QAAA,EAAI;UAAoB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eAEN5C,OAAA;UAAM6C,QAAQ,EAAE/B,YAAa;UAAAsB,QAAA,gBAC3BpC,OAAA;YAAK8C,SAAS,EAAC,YAAY;YAAAV,QAAA,gBACzBpC,OAAA;cAAO+C,OAAO,EAAC,WAAW;cAAAX,QAAA,EAAC;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3C5C,OAAA;cACEgD,IAAI,EAAC,MAAM;cACXX,EAAE,EAAC,WAAW;cACdY,IAAI,EAAC,WAAW;cAChBC,WAAW,EAAC,mBAAmB;cAC/BC,KAAK,EAAExC,QAAS;cAChByC,QAAQ,EAAGrC,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACsC,MAAM,CAACF,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN5C,OAAA;YAAK8C,SAAS,EAAC,YAAY;YAAAV,QAAA,gBACzBpC,OAAA;cAAO+C,OAAO,EAAC,OAAO;cAAAX,QAAA,EAAC;YAAa;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5C5C,OAAA;cACEgD,IAAI,EAAC,OAAO;cACZX,EAAE,EAAC,OAAO;cACVY,IAAI,EAAC,OAAO;cACZC,WAAW,EAAC,0BAA0B;cACtCC,KAAK,EAAE9C,KAAM;cACb+C,QAAQ,EAAGrC,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACsC,MAAM,CAACF,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN5C,OAAA;YAAK8C,SAAS,EAAC,YAAY;YAAAV,QAAA,gBACzBpC,OAAA;cAAO+C,OAAO,EAAC,WAAW;cAAAX,QAAA,EAAC;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3C5C,OAAA;cACEgD,IAAI,EAAC,UAAU;cACfX,EAAE,EAAC,WAAW;cACdY,IAAI,EAAC,WAAW;cAChBC,WAAW,EAAC,kBAAkB;cAC9BC,KAAK,EAAE5C,QAAS;cAChB6C,QAAQ,EAAGrC,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACsC,MAAM,CAACF,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN5C,OAAA;YAAK8C,SAAS,EAAC,YAAY;YAAAV,QAAA,gBACzBpC,OAAA;cAAO+C,OAAO,EAAC,YAAY;cAAAX,QAAA,EAAC;YAAgB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpD5C,OAAA;cACEgD,IAAI,EAAC,UAAU;cACfX,EAAE,EAAC,YAAY;cACfY,IAAI,EAAC,YAAY;cACjBC,WAAW,EAAC,kBAAkB;cAC9BC,KAAK,EAAE1C,SAAU;cACjB2C,QAAQ,EAAGrC,CAAC,IAAKL,YAAY,CAACK,CAAC,CAACsC,MAAM,CAACF,KAAK;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN5C,OAAA;YAAKqC,EAAE,EAAC,YAAY;YAAAD,QAAA,gBAElBpC,OAAA;cAAQqC,EAAE,EAAC,WAAW;cAACW,IAAI,EAAC,QAAQ;cAAAZ,QAAA,EAAC;YAAc;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAK5D5C,OAAA;cAAQgD,IAAI,EAAC,QAAQ;cAACM,KAAK,EAAC,uBAAuB;cAAAC,OAAO,EAAErB,aAAc;cAAAE,QAAA,EAAE;YAE5E;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACN,CAAC;AAEP;AAACxC,EAAA,CA9MQD,MAAM;EAAA,QAMGrB,UAAU;AAAA;AAAA0E,EAAA,GANnBrD,MAAM;AAgNf,eAAeA,MAAM;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}